name: Cargo Build & Test

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    services:
      database:
        image: ghcr.io/bridgetocockaigne/fowoo/postgres:latest
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Run migrations
        run: docker run --network="${{ job.container.network }}" --rm -v "./migrations:/workspace/migrations" -e "DATABASE_URL=${{ secrets.DATABASE_URL }}" ghcr.io/bridgetocockaigne/fowoo/migrations:latest sqlx migrate run
      -
        name: Run tests
        run: docker run --network="${{ job.container.network }}" --rm -v "./codecover:/workspace/codecover" -v "./src:/workspace/src" -v "./tests:/workspace/tests" -v "./templates:/workspace/templates" -v "./statics:/workspace/statics" -v "./Cargo.toml:/workspace/Cargo.toml" -v "./Cargo.lock:/workspace/Cargo.lock" -v "./queries:/workspace/queries" -e "DATABASE_URL=${{ secrets.DATABASE_URL }}" ghcr.io/bridgetocockaigne/fowoo/rust:latest cargo llvm-cov --all-features --workspace --lcov --output-path /workspace/codecover/lcov.info
      -
        name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          files: /codecover/lcov.info
          fail_ci_if_error: true
