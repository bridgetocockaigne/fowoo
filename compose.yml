services:
  runner:
    build: ./docker/rust
    container_name: runner
    command: cargo watch -x run
    ports:
      - 80:8080
    volumes:
      - ./src:/workspace/src
      - ./tests:/workspace/tests
      - ./templates:/workspace/templates
      - ./statics:/workspace/statics
      - ./queries:/workspace/queries
      - ./Cargo.toml:/workspace/Cargo.toml
      - ./Cargo.lock:/workspace/Cargo.lock
      - build-cache:/workspace/target
    env_file:
      - ./default.env
      - ./local.env
    depends_on:
      - database
      - migrations

  tester:
    build: ./docker/rust
    container_name: tester
    command: cargo watch -x test
    volumes:
      - ./src:/workspace/src
      - ./tests:/workspace/tests
      - ./templates:/workspace/templates
      - ./statics:/workspace/statics
      - ./Cargo.toml:/workspace/Cargo.toml
      - ./Cargo.lock:/workspace/Cargo.lock
      - ./queries:/workspace/queries
      - build-cache:/workspace/target
    env_file:
      - ./default.env
      - ./local.env
    depends_on:
      - database
      - migrations

  migrations:
    build: ./docker/sqlx-cli
    container_name: migrations
    command: sqlx migrate run
    volumes:
      - ./migrations:/workspace/migrations
    depends_on:
      database:
        condition: service_healthy

    env_file:
      - ./default.env
      - ./local.env

  database:
    build: ./docker/postgres
    container_name: database
    volumes:
      - database:/workspace/database/volume
    env_file:
      - ./default.env
      - ./local.env
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB'"]
      interval: 3s
      timeout: 2s
      retries: 20
      start_period: 3s

volumes:
  build-cache:
  database:
